1. Как правильно настроить форму для отправки данных в обработчик? Какие атрибуты прописать, какие значения?
 
Заполняем поле form action = "название нашего файла обработчика.php", далее смотря с чем мы работаем, указываем method="post",если есть медиа-файлы,
например, картинки указываем рядом enctype="multipart/form-data". Так же если текст мы вводим в строке input указываем name='имя', по этому ключу мы сможем потом обращаться к записи через глобальные массивы
И так же если вводим текст type='submit' для того что текст который мы ввели, отправился в форму указаную выше.
2. Что такое обработчик? Какую задачу он решает? А зачем выделять его в отдельный файл? В чем польза такого подхода?

Этот созданный нами php-файл, который обрабатывает данный с формы. Он берет информацию из формы, делает с ними, что-то и возвращает нас с результатом на стартовую страницу или же куда-то дальше. Выделяем его в отдельный файл для того, что-бы не нагромождать код, удобство отладки, 
так как мы сразу понимаем, что если не работает, например, база данных, и мы знаем, что этот файл за нее отвечает, нам будет проще найти ошибку.
3. Какие методы бывают отправки данных через форму? В чем их разница? В каком случае использовать один, а когда другой?

 Метод get передает значение через ссылку, и при обновление сайта, данные остаются. А метод post передает значение в теле запроса, соответственно данные нужно будет вводить заново каждый раз, данный метод имеет большую защиту данных чем метод get, поэтому его рекомендуется использовать при авторизации

4. Опишите процесс записи строки в базу данных: как подключиться, подготовить запрос и выполнить

В форме записывает form action - "нашфайл.php" method="post", в строке input, name="text", в кнопке type="submit". Затем переходим в "нашфайл.php", в нем прописываем:

$text = $_POST['text']; - Создаем переменную $text, которая принимает значение глобальной переменной $_POST['text'] которое мы записали в форме. 'text' -это имя которое мы записали в строке input в форме
$pdo = new PDO ("mysql:host=localhost;dbname=Secondbase;","root",""); Здесь мы подключились к базе, host = 'localhost'; имя сервера базы данных, dbname=Secondbase - имя базы данных, "root" имя пользователя базы данных, "" пароль пользователя базы данных
$sql = "INSERT INTO my_table (text) VALUES (:text)"; # формируем запрос на вставку в таблицу my_table в столбец (text) значения (:text), :text это метка используется для защиты данных.
$stmt = $pdo -> prepare($sql); # подготавливаем запрос, помещая его в переменую
$stmt ->execute(['text'=> $text]); # выполняем запрос, здесь ключом выступает метка :text указанная в запросе, а значением наша переменная текст.

header("Location: /ourform.php"); # Вернет нас обратно на нашу форму, где вместо ourform надо вписать название нашей формы.

5. Какой глобальный массив используется при создании флеш-сообщений? 

$_SESSION.

6. Опишите пошагово как создать и вывести флеш-сообщение:

Для создания флеш-уведомления, создадим условие. Добавим проверку текста добавленного ранее в вопросе 4. Выше того, что писали добавим еще: 

session_start();

$pdo = new PDO ("mysql:host=localhost;dbname=Secondbase;","root",""); # Заходим в базу, снизу теперь его можно убрать
$sql = "SELECT * FROM my_table WHERE text=:text"; #Делаем запрос на выбор всего в базе где в колонке текст, в колонке текст равен, тому что мы написали
$stmt = $pdo -> prepare($sql); # Подготавливаем запрос
$stmt ->execute(['text'=> $text]); # Выполняем запрос
$result = $stmt ->fetchAll(PDO::FETCH_ASSOC); Выводим все содержимое в виде ассоциативного массива 

Далее, если в этом содержимом находится текст который мы уже ввели пишем условие.

if (!empty($result)){	 # Если переменная $result не пустая, а значит в ней есть значение которое мы написали и оно уже есть в таблице.
 $_SESSION['error'] = "Такой текст уже есть";       # Создаем сессию с ключом['название ключа'], в которую помещае текст предупреждение.               
    header("location: task_15.php");		    # Выводим пользователя обратно 
    exit;					    # Пишем, чтобы код с добавленим ниже не работал. Если мы вошли в это условие.
}

Затем переходим в файл-форму, подключаем сессию. И перед строкой, где вписываем текст добавляем:
   					<?php if(isset($_SESSION['error'])): ?> # Создаем условие if  где при помощи функции isset проверяем , существует ли переменная $_SESSION с нашим ключом 
                                    <div class="alert alert-danger fade show" role="alert">
                                    <?php echo $_SESSION['error']; ?> # если она есть значит, мы вошли в условие, в этой строке мы выводим значие $_SESSION['error']
                                    <?php unset($_SESSION['error']); ?> # Сразу же удаляем ее чтобы при обновлении страницы оно пропало.

                                    </div>
                                    <?php endif; ?> # Выходим из условия

7. Как проверить текст на формат эл. адреса средствами php?
	при помощи фильтров FILTER_VALIDATE_EMAIL и  FILTER_SANITIZE_EMAIL.
	
8. Какие функции используются для генерации пароля и его проверку? 
	(password_hash, password_verify)
9. Почему важно сохранять пароль в виде хэша? Почему не рекомендуется хранить пароль в открытом виде?
	Потому что, если кто-то сможет получить доступ к базе, он автоматически получит доступ к каждому пользователю, что небезопасно


10. Напишите какая есть особенность у веб-сервера которую покрывает Сессия? Иными словами, зачем нужна Сессия?
	Сессия позволяет хранить произвольную информацию,которая сохраняется при перемещении по страницам и ее можно там использовать.

11. Опишите пошагово реализацию функционала Аутентификации(входа в систему).

  	11.1 Сначала создадим и заполним форму, введем метод post, type submit, укажем name и так же в форме пропишем путь к обработчику.
	11.2 Затем в обработчике, выведем данные из $_POST в переменные email или логин и password.
	11.3 Затем создадим запрос в базу, который выберет всё в столбце email и выведем нам ассоциативный массив, если наша введенная
почта будет соответствовать значение с таблице, таким образом мы проверим существование такого пользователя, если его нет, отправим его на форму авторизации
	11.4 Затем проверим пароль при помощи password_verify, если все совпадает выводим пользователя на страницу к которому был закрыт доступ, а его самого запишем в сессию.

12. Какая есть особенность настройки формы для загрузки файлов?
	Необходимо прописать в form action enctype="multipart/form-data";

13. Какое значение должно быть у инпута для множественной загрузки файлов?
	mulpitple а в name указать: "нашключ[]"; без скобок массива отразится только 1 файл(последний).

14. Как создать уникальное название файла? 
	При помощи функции uniqid()  а так же pathinfo,что через ключ 'extension' вытащить разрешение файла.

15. Напишите названия функций для загрузки файла, проверки существует ли файл в папке, удаления файла
	move_uploaded_file() загружает файл в выбранную папку.
	file_exists - проверяет наличие файла в папке.
	unlink - удаляет файл.
16. Какой глобальный массив хранит все файлы передаваемые через форму?
	$_FILES
17. Опишите структуру глобального массива хранящего файлы: какие имеет ключи и значения
	Структура массива в массиве. Сначала ключ - тип файла(напр. Картинка(image)), затем в этот ключе входит массив из имени файла, его формата jpeg, tmp_name или путь
	затем указываются ошибки, если имеются и размер.

18. Помогите человеку решить задачу. «Пользователь загрузил файл и нажимает отправить. Он ожидает, что файл сохранится в папку, а название в базу. Файл сохраняется в папку, но в базу название не сохраняется» В чем может быть ошибка?
	Проблема скорее всего в запрос на добавление в базу, возможно указал неправильное название таблицы или грамматическая ошибка.

19. Помогите человеку решить задачу. «Создал массив элементов, и хочу вывести при помощи цикла. Вроде бы все написал, но выходит ошибка: illegal offset type» Что нужно сделать, чтобы решить эту проблему?
	Скорее всего неверно указан ключ, ошибка говорит, о неправильном смещении типа.
20. Что означает эта ошибка. «Parse error Unexpected (, expected ;» Что нужно сделать, чтобы избавить от ошибки?
	Заменить ( на ;
22. Чем технически отличается глобальный массив от обычного массива?
	Областью видимости, обычным только в том файле где создан, глобальный во всех файлах
23. Дайте человеку совет. Он говорит: «Когда я пишу код, я не обращаю внимания на названия переменных, функций и массивов. Для меня все и так понятно. Поэтому я даю короткие названия, типа $a, $b, $smth. Но потом, понимаю, что мне тяжело ориентироваться в них»
	Давай название переменным близко приближенным по смыслу. Идет перечисление пользователей назови $users, животные $animals и т.д
	давая такие названия, потом посмотря на код будет быстрее приходить понимаю, что тут написано, но и не забывай про комментарии.
24. Дайте человеку совет. Он говорит: «Хочу самостоятельно написать регистрацию и авторизацию. Приступаю и у меня ступор: не знаю с чего начать. Вроде бы понимаю, что регистрация — это добавление пользователя в базу, но не понимаю с чего начинать?»
	Составь алгоритм сначала для себя на бумаге, как бы ты проверял пользователя. Сначала бы ты наверняка попросил какие-то данные, чтобы было, что проверять, затем посмотрел, посмотрел существует ли такой в принципе, 
	потом если он существует проверил бы пароль, а если бы подошел пароль, то тогда бы уже дал доступ. Расширь этот алгоритм, а дальше вопрос времени)
25. Объясните человеку в чем разница между $_SESSION и $_COOKIE: «Не пойму в чем разница между сессией и куки? Вроде бы одно и то же…пока полностью не осознал.»
	$_SESSION создается на сервере, а COOKIE это данные которые хранятся у пользователя на компьютере. 


